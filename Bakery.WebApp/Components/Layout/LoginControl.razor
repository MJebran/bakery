@using System.Security.Claims
@using Bakery.WebApp.Authentication;
@using Bakery.WebApp.Data;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IBakeryAutheticationService _authenticationService

@if (User?.Identity?.Name != null)
{
    <img class="profile-pic" src="@Avatar"/>
    <b>@GivenName @Surname</b>
    <a href="/Identity/Logout"
       target="_top">
        Logout
    </a>
}
else
{
    <a href="/Identity/Login"
       target="_top">
        Login
    </a>
}

@code {
    private ClaimsPrincipal? User;
    private string? GivenName;
    private string? Surname;
    private string? Email;
    private string? Avatar;
    protected override async Task OnInitializedAsync()
    {     
        User = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;

        var givenName = User.FindFirst(ClaimTypes.GivenName);
        GivenName = givenName?.Value ?? "";

        var surname = User.FindFirst(ClaimTypes.Surname);
        Surname = surname?.Value ?? "";

        var avatar = User.FindFirst("urn:google:image");
        Avatar = avatar != null ? avatar.Value : "";

        var email = User.FindFirst(ClaimTypes.Email);
        Email = email?.Value ?? "";

        if(!await _authenticationService.IsUserAuthenticatedAsync(Email))
        {
            if(Email != "unknown" && Email != "")
            {
                await _authenticationService.RegisterUserAsync(Email, GivenName, Surname);            
            }
        }
    }
}